version: "3.9"
services:
    jupyter-server:
        image: dl-jupyter
        init: true
        build:
            context: ./
            dockerfile: jupyter.Dockerfile
        env_file: ./.env
        ports:
            - ${JUPYTER_PORT}:${JUPYTER_PORT}
        volumes:
            - ${ROOT_DIR}:/jupyter
        environment:
            - NVIDIA_VISIBLE_DEVICES=all
            - NVIDIA_DISABLE_REQUIRE=true
        command:
            [
                "jupyter",
                "notebook",
                "--ip=*",
                "--port=${JUPYTER_PORT}",
                "--allow-root",
                "--notebook-dir=${JUPYTER_DIR}",
                '--NotebookApp.token=${JUPYTER_TOKEN}'
            ]
        deploy:
            resources:
                reservations:
                    devices:
                        - driver: nvidia
                          count: all
                          capabilities: ["gpu"]

    tensorboard:
        image: dl-tensorboard
        build:
            context: ./
            dockerfile: tensorboard.Dockerfile
        ports:
            - ${TENSORBOARD_PORT}:${TENSORBOARD_PORT}
        volumes:
            - ${ROOT_DIR}:/jupyter
        command:
            [
                "tensorboard",
                "--logdir=${TENSORBOARD_DIR}",
                "--port=${TENSORBOARD_PORT}",
                "--bind_all",
            ]

#In order to use model registry functionality, you must run your server using a database-backed store. 
    db:
        image: mysql/mysql-server:5.7.28
        restart: unless-stopped
        container_name: mlflow_db
        expose:
            -  ${MYSQL_PORT}:${MYSQL_PORT}
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            -  ${DB_DIR}:/var/lib/mysql

    mlflow:
        image: mlflow
        build:
            context: ./
            dockerfile: mlflow.Dockerfile
        ports:
            - ${MLFLOW_PORT}:${MLFLOW_PORT}
        volumes:
            - ${ROOT_DIR}:/jupyter
        command:
            [
                "mlflow",
                "server",
                "--backend-store-uri=mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE}",
                "--default-artifact-root=${MLFLOW_DIR}",
                "--port=${MLFLOW_PORT}",
                "--host=0.0.0.0"
            ]
        depends_on:
            wait-for-db:
                condition: service_completed_successfully
   
    wait-for-db:
        image: atkrad/wait4x
        depends_on:
            - db
        command: tcp db:${MYSQL_PORT} -t 90s -i 1000ms
